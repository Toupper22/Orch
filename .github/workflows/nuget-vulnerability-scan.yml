name: NuGet Vulnerability Scan

on:
  pull_request:
    branches: [ main ]
  schedule:
    # Run every Monday at 10:00 AM UTC (1 hour after CodeQL)
    - cron: '0 10 * * 1'
  workflow_dispatch:

permissions:
  contents: read
  security-events: write

jobs:
  scan-vulnerabilities:
    name: Scan NuGet Packages for Vulnerabilities
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Setup NuGet Authentication
        run: |
          dotnet nuget update source EfimaLayerFeed \
            --username ${{ github.actor }} \
            --password ${{ secrets.EFIMA_FEED_PAT }} \
            --store-password-in-clear-text

      - name: Restore packages for all projects
        run: |
          echo "Restoring packages..."
          dotnet restore src/Efima.IL/Efima.IL.csproj
          dotnet restore src/Efima.IL.Nomentia/Efima.IL.Nomentia.csproj
          dotnet restore src/Sepa/functionApp/SepaTransformer.csproj
          dotnet restore src/sample-integration/function-app/MessageTransformer.csproj

      - name: Scan for vulnerable packages
        id: scan
        run: |
          echo "## NuGet Vulnerability Scan Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          HAS_VULNERABILITIES=false

          # Scan each project
          for project in \
            "src/Efima.IL/Efima.IL.csproj" \
            "src/Efima.IL.Nomentia/Efima.IL.Nomentia.csproj" \
            "src/Sepa/functionApp/SepaTransformer.csproj" \
            "src/sample-integration/function-app/MessageTransformer.csproj"
          do
            echo "### Scanning: $project" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY

            # Run vulnerability check and capture output
            OUTPUT=$(dotnet list "$project" package --vulnerable --include-transitive 2>&1 || true)

            # Check if vulnerabilities were found
            if echo "$OUTPUT" | grep -q "has the following vulnerable packages"; then
              HAS_VULNERABILITIES=true
              echo "❌ **Vulnerabilities found**" >> $GITHUB_STEP_SUMMARY
              echo '```' >> $GITHUB_STEP_SUMMARY
              echo "$OUTPUT" >> $GITHUB_STEP_SUMMARY
              echo '```' >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
            else
              echo "✅ No vulnerabilities found" >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
            fi
          done

          # Set output for later steps
          echo "has_vulnerabilities=$HAS_VULNERABILITIES" >> $GITHUB_OUTPUT

      - name: Check vulnerability status
        if: steps.scan.outputs.has_vulnerabilities == 'true'
        run: |
          echo "::warning::Vulnerable NuGet packages detected! Check the job summary for details."
          # Uncomment the line below to FAIL the build when vulnerabilities are found:
          # exit 1
