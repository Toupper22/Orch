{
	"$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"IntegrationGroup": {
			"type": "string",
			"minLength": 1
		},
		"IntegrationGroupShort": {
			"type": "string"
		},
		"SharedCustomerGroup": {
			"type": "string"
		},
		"IntegrationName": {
			"type": "string"
		},
		"Tier": {
			"type": "string",
			"minLength": 1
		},
		"CustomerId": {
			"type": "string"
		},
		"LogicAppName": {
			"type": "string",
			"defaultValue": "scheduler"
		},
		"LogicAppState": {
			"type": "string",
			"defaultValue": "Disabled"
		},
		"TableName": {
			"type": "string",
			"defaultValue": "Values"
		},
		"IntegrationPartitionKey": {
			"type": "string",
			"defaultValue": "Orchestration"
		},
		"ConnectionInPartitionKey": {
			"type": "string",
			"defaultValue": "D365FO"
		},
		"ConnectionOutPartitionKey": {
			"type": "string",
			"defaultValue": "SFTP"
		},
		"SplitPartitionKey": {
			"type": "string",
			"defaultValue": "Orchestration"
		},
		"SplitRowKey": {
			"type": "string",
			"defaultValue": "Company"
		},
		"IntegrationTargetKey": {
			"type": "string",
			"defaultValue": ""
		},
		"ConnectionInTargetKey": {
			"type": "string",
			"defaultValue": ""
		},
		"ConnectionOutTargetKey": {
			"type": "string",
			"defaultValue": ""
		},
		"SplitPartitionTargetKey": {
			"type": "string",
			"defaultValue": ""
		},
		"SplitTargetKey": {
			"type": "string",
			"defaultValue": ""
		},
		/* DEPRECATED - Use NextCustomerLogicApp instead. */
		"NextLogicApp": {
			"defaultValue": "starter",
			"type": "string"
		},
		"NextCustomerLogicApp": {
			"defaultValue": "",
			"type": "string"
		},
		"NextLogicAppCustomerGroup": {
			"defaultValue": "",
			"type": "string"
		},
		"Recurrence": {
			"defaultValue": {
				"frequency": "Month",
				"interval": 15,
				"timeZone": "UTC"
			},
			"type": "object"
		}
	},
	"variables": {
		"LogicAppName": "[concat('la-', parameters('CustomerId'), '-', parameters('IntegrationName'), '-', parameters('LogicAppName'), '-', parameters('Tier'))]",
		"IdentityName": "[concat('id-', parameters('CustomerId'), '-', parameters('IntegrationGroup'), '-', parameters('Tier'))]",
		"StorageAccountName": "[concat('starch', parameters('CustomerId'), parameters('IntegrationGroupShort'), parameters('Tier'))]",
		"TableAPIConnectionName": "[concat('ac-ts-', parameters('CustomerId'), '-', parameters('IntegrationGroupShort'), '-', parameters('Tier'))]",
		"SharedResourceGroupName": "[concat('rg-', parameters('SharedCustomerGroup'), '-', parameters('Tier'))]",
		"LogAnalyticsWorkspaceName": "[concat('log-', parameters('SharedCustomerGroup'), '-', parameters('Tier'))]",
		"IntegrationTargetKey": "[if(empty(parameters('IntegrationTargetKey')), parameters('IntegrationPartitionKey'), parameters('IntegrationTargetKey'))]",
		"ConnectionInTargetKey": "[if(empty(parameters('ConnectionInTargetKey')), parameters('ConnectionInPartitionKey'), parameters('ConnectionInTargetKey'))]",
		"ConnectionOutTargetKey": "[if(empty(parameters('ConnectionOutTargetKey')), parameters('ConnectionOutPartitionKey'), parameters('ConnectionOutTargetKey'))]",
		"SplitPartitionTargetKey": "[if(empty(parameters('SplitPartitionTargetKey')), parameters('SplitPartitionKey'), parameters('SplitPartitionTargetKey'))]",
		"SplitRowTargetKey": "[if(empty(parameters('SplitTargetKey')), parameters('SplitRowKey'), parameters('SplitTargetKey'))]",
		"NextLogicAppName": "[concat('la-', if(empty(parameters('NextCustomerLogicApp')), concat(parameters('CustomerId'), '-', parameters('IntegrationName'), '-', parameters('NextLogicApp')), parameters('NextCustomerLogicApp')), '-', parameters('Tier'))]",
		"NextLogicAppResourceGroupName": "[concat('rg-', parameters('NextLogicAppCustomerGroup'), '-', parameters('Tier'))]"
	},
	"resources": [
		{
			"apiVersion": "2017-07-01",
			"identity": {
				"type": "UserAssigned",
				"userAssignedIdentities": {
					"[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('IdentityName'))]": {}
				}
			},
			"location": "[resourceGroup().location]",
			"name": "[variables('LogicAppName')]",
			"properties": {
				"state": "[parameters('LogicAppState')]",
				"definition": {
					"$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
					"actions": {
						"Initialize_table_parameters": {
							"runAfter": {},
							"type": "InitializeVariable",
							"inputs": {
								"variables": [
									{
										"name": "tableParams",
										"type": "object",
										"value": {}
									}
								]
							}
						},
						"Get_parameters_from_table": {
							"actions": {
								"Get_entities_(V2)": {
									"runAfter": {},
									"type": "ApiConnection",
									"inputs": {
										"host": {
											"connection": {
												"name": "@parameters('$connections')['tableconn']['connectionId']"
											}
										},
										"method": "get",
										"path": "[format('/v2/storageAccounts/@{{encodeURIComponent(''{0}'')}}/tables/@{{encodeURIComponent(''{1}'')}}/entities', variables('StorageAccountName'), parameters('TableName'))]",
										"queries": {
											"$filter": "[format('PartitionKey eq ''{0}'' or PartitionKey eq ''{1}'' or PartitionKey eq ''{2}''', parameters('IntegrationPartitionKey'), parameters('ConnectionInPartitionKey'), parameters('ConnectionOutPartitionKey'))]",
											"$select": "PartitionKey, RowKey, Value"
										}
									}
								},
								"Parse_JSON": {
									"runAfter": {
										"Get_entities_(V2)": [
											"Succeeded"
										]
									},
									"type": "ParseJson",
									"inputs": {
										"content": "@body('Get_entities_(V2)')?['value']",
										"schema": {
											"items": {
												"properties": {
													"PartitionKey": {
														"type": "string"
													},
													"RowKey": {
														"type": "string"
													},
													"Value": {}
												},
												"required": [
													"PartitionKey",
													"RowKey",
													"Value"
												],
												"type": "object"
											},
											"type": "array"
										}
									}
								},
								"Set_each_parameter_to_tableParams": {
									"foreach": "@body('Parse_JSON')",
									"actions": {
										"Add_with_tableParams": {
											"runAfter": {},
											"type": "Compose",
											"inputs": "@setProperty(variables('tableParams'), item()['PartitionKey'], addProperty(coalesce(variables('tableParams')?[item()['PartitionKey']], json('{}')), items('Set_each_parameter_to_tableParams')['RowKey'], item()['Value']))"
										},
										"Update_tableParams": {
											"runAfter": {
												"Add_with_tableParams": [
													"Succeeded"
												]
											},
											"type": "SetVariable",
											"inputs": {
												"name": "tableParams",
												"value": "@outputs('Add_with_tableParams')"
											}
										}
									},
									"runAfter": {
										"Parse_JSON": [
											"Succeeded"
										]
									},
									"type": "Foreach",
									"runtimeConfiguration": {
										"concurrency": {
											"repetitions": 1
										}
									}
								}
							},
							"runAfter": {
								"Initialize_table_parameters": [
									"Succeeded"
								]
							},
							"type": "Scope"
						},
						"Apply_target_keys": {
							"runAfter": {
								"Get_parameters_from_table": [
									"Succeeded"
								]
							},
							"type": "Compose",
							"inputs": {
								"[variables('IntegrationTargetKey')]": "[format('@variables(''tableParams'')?[''{0}'']', parameters('IntegrationPartitionKey'))]",
								"[variables('ConnectionInTargetKey')]": "[format('@coalesce(variables(''tableParams'')?[''{0}''], json(''{{}}''))', parameters('ConnectionInPartitionKey'))]",
								"[variables('ConnectionOutTargetKey')]": "[format('@coalesce(variables(''tableParams'')?[''{0}''], json(''{{}}''))', parameters('ConnectionOutPartitionKey'))]"
							}
						},
						"Select": {
							"inputs": {
								"from": "[format('@split(coalesce(variables(''tableParams'')?[''{0}'']?[''{1}''], ''nu''), '';'')', parameters('SplitPartitionKey'), parameters('SplitRowKey'))]",
								"select": {
									"[variables('SplitRowTargetKey')]": "@item()",
									"Parameters": "[format('@setProperty(outputs(''Apply_target_keys''), ''{2}'', setProperty(coalesce(outputs(''Apply_target_keys'')?[''{2}''], json(''{{}}'')), ''{3}'', item()))', parameters('SplitPartitionKey'), parameters('SplitRowKey'), variables('SplitPartitionTargetKey'), variables('SplitRowTargetKey'))]"
								}
							},
							"runAfter": {
								"Apply_target_keys": [
									"Succeeded"
								]
							},
							"type": "Select"
						},
						"Starter": {
							"inputs": {
								"body": "@body('Select')",
								"host": {
									"triggerName": "manual",
									"workflow": {
										"id": "[if(empty(parameters('NextLogicAppCustomerGroup')), resourceId('Microsoft.Logic/workflows', variables('NextLogicAppName')), resourceId(variables('NextLogicAppResourceGroupName'), 'Microsoft.Logic/workflows', variables('NextLogicAppName')))]"
									}
								}
							},
							"runAfter": {
								"Select": [
									"Succeeded"
								]
							},
							"type": "Workflow"
						}
					},
					"contentVersion": "1.0.0.0",
					"outputs": {},
					"parameters": {
						"$connections": {
							"defaultValue": {},
							"type": "Object"
						}
					},
					"triggers": {
						"Recurrence": {
							"recurrence": "[parameters('Recurrence')]",
							"runtimeConfiguration": {
								"concurrency": {
									"runs": 1
								}
							},
							"type": "Recurrence"
						}
					}
				},
				"parameters": {
					"$connections": {
						"value": {
							"tableconn": {
								"id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuretables')]",
								"connectionId": "[resourceId('Microsoft.Web/connections', variables('TableAPIConnectionName'))]",
								"connectionName": "[variables('TableAPIConnectionName')]",
								"connectionProperties": {
									"authentication": {
										"identity": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('IdentityName'))]",
										"type": "ManagedServiceIdentity"
									}
								}
							}
						}
					}
				}
			},
			"resources": [
				{
					"type": "providers/diagnosticSettings",
					"name": "[concat('Microsoft.Insights/', variables('LogAnalyticsWorkspaceName'))]",
					"dependsOn": [
						"[variables('LogicAppName')]"
					],
					"location": "[resourceGroup().location]",
					"apiVersion": "2017-05-01-preview",
					"properties": {
						"name": "[variables('LogAnalyticsWorkspaceName')]",
						"workspaceId": "[resourceId(variables('SharedResourceGroupName'), 'Microsoft.OperationalInsights/workspaces/', variables('LogAnalyticsWorkspaceName'))]",
						"logs": [
							{
								"category": "WorkflowRuntime",
								"enabled": true,
								"retentionPolicy": {
									"days": 0,
									"enabled": false
								}
							}
						],
						"metrics": [
							{
								"category": "AllMetrics",
								"enabled": false,
								"retentionPolicy": {
									"days": 0,
									"enabled": false
								}
							}
						]
					}
				}
			],
			"tags": {
				"displayName": "LogicApp"
			},
			"type": "Microsoft.Logic/workflows"
		}
	],
	"outputs": {}
}
