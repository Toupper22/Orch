{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
	"parameters": {
		"IntegrationGroup": {
			"type": "string",
			"minLength": 1
		},
		"IntegrationGroupShort": {
			"type": "string"
		},
		"SharedCustomerGroup": {
			"type": "string"
		},
		"IntegrationName": {
			"type": "string"
		},
		"Tier": {
			"type": "string",
			"minLength": 1
		},
		"CustomerId": {
			"type": "string"
		},
		"ConnectionCustomerGroup": {
			"type": "string"
		},
		"ConnectionWorkflow": {
			"type": "string",
			"defaultValue": "custom-entity-search"
		},
		"ConnectionPartitionKey": {
			"type": "string",
			"defaultValue": ""
		},
		"IntegrationPartitionKey": {
			"type": "string",
			"defaultValue": "Orchestration"
		},
		"LogicAppName": {
			"type": "string",
			"defaultValue": "starter"
		},
		"LogicAppState": {
			"type": "string",
			"defaultValue": "Enabled"
		},
		"NextLogicApp": {
			"defaultValue": "handler",
			"type": "string"
		}
	},
	"variables": {
		"LogicAppName": "[concat('la-', parameters('CustomerId'), '-', parameters('IntegrationName'), '-', parameters('LogicAppName'), '-', parameters('Tier'))]",
		"IdentityName": "[concat('id-', parameters('CustomerId'), '-', parameters('IntegrationGroup'), '-', parameters('Tier'))]",
		"ConnectionResourceGroupName": "[concat('rg-', parameters('ConnectionCustomerGroup'), '-', parameters('Tier'))]",
		"ConnectionWorkflowName": "[concat('la-', parameters('ConnectionCustomerGroup'), '-', parameters('ConnectionWorkflow'), '-', parameters('Tier'))]",
		"SharedResourceGroupName": "[concat('rg-', parameters('SharedCustomerGroup'), '-', parameters('Tier'))]",
		"LogAnalyticsWorkspaceName": "[concat('log-', parameters('SharedCustomerGroup'), '-', parameters('Tier'))]",
		"NextLogicAppName": "[concat('la-', parameters('CustomerId'), '-', parameters('IntegrationName'), '-', parameters('NextLogicApp'), '-', parameters('Tier'))]"
	},
	"resources": [
	{
		"properties": {
			"accessControl": {
				"triggers": {
					"allowedCallerIpAddresses": []
				},
				"actions": {
					"allowedCallerIpAddresses": []
				}
			},
			"state": "[parameters('LogicAppState')]",
			"definition": {
				"$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
				"actions": {
					"GetEntities": {
						"inputs": {
							"body": "@coalesce(triggerBody()?['Input'], triggerBody()['Parameters'])",
							"host": {
								"triggerName": "manual",
								"workflow": {
									"id": "[resourceId(variables('ConnectionResourceGroupName'), 'Microsoft.Logic/workflows', variables('ConnectionWorkflowName'))]"
								}
							},
							"retryPolicy": {
								"type": "none"
							}
						},
						"runAfter": {},
						"type": "Workflow"
					},
					"HandlingLogic": {
						"inputs": {
							"body": [
								{
									"Input": "@body('GetEntities')",
									"Parameters": "@triggerBody()?['Parameters']"
								}
							],
							"host": {
								"triggerName": "manual",
								"workflow": {
									"id": "[resourceId('Microsoft.Logic/workflows', variables('NextLogicAppName'))]"
								}
							},
							"retryPolicy": {
								"type": "none"
							}
						},
						"runAfter": {
							"GetEntities": [
								"Succeeded"
							]
						},
						"type": "Workflow"
					},
					"Terminate": {
						"inputs": {
							"runError": {
								"code": "@outputs('GetEntities')?['statusCode']",
								"message": "@coalesce(body('GetEntities')?['message'], slice(string(body('GetEntities')), 0, 500))"
							},
							"runStatus": "Failed"
						},
						"runAfter": {
							"GetEntities": [
								"Failed"
							]
						},
						"type": "Terminate"
					},
					"Terminate2": {
						"inputs": {
							"runError": {
								"code": "@outputs('HandlingLogic')?['statusCode']",
								"message": "@coalesce(body('HandlingLogic')?['message'], slice(string(body('HandlingLogic')), 0, 500))"
							},
							"runStatus": "Failed"
						},
						"runAfter": {
							"HandlingLogic": [
								"Failed"
							]
						},
						"type": "Terminate"
					}
				},
				"contentVersion": "1.0.0.0",
				"outputs": {},
				"parameters": {
					"$connections": {
						"defaultValue": {},
						"type": "Object"
					}
				},
				"triggers": {
					"manual": {
						"inputs": {
							"schema": {
								"items": {
									"properties": {
										"Input": {
											"type": "object"
										},
										"Parameters": {
											"type": "object"
										}
									},
									"type": "object"
								},
								"type": "array"
							}
						},
						"kind": "Http",
						"splitOn": "@triggerBody()",
						"type": "Request",
						"operationOptions": "EnableSchemaValidation",
						"runtimeConfiguration": {
							"concurrency": {
								"runs": 1
							}
						}
					}
				}
			},
			"parameters": {}
		},
		"name": "[variables('LogicAppName')]",
		"type": "Microsoft.Logic/workflows",
		"location": "[resourceGroup().location]",
		"tags": {
			"displayName": "LogicApp"
		},
		"resources": [
			{
				"type": "providers/diagnosticSettings",
				"name": "[concat('Microsoft.Insights/', variables('LogAnalyticsWorkspaceName'))]",
				"dependsOn": [
					"[variables('LogicAppName')]"
				],
				"location": "[resourceGroup().location]",
				"apiVersion": "2017-05-01-preview",
				"properties": {
					"name": "[variables('LogAnalyticsWorkspaceName')]",
					"workspaceId": "[resourceId(variables('SharedResourceGroupName'), 'Microsoft.OperationalInsights/workspaces/', variables('LogAnalyticsWorkspaceName'))]",
					"logs": [
						{
							"category": "WorkflowRuntime",
							"enabled": true,
							"retentionPolicy": {
								"days": 0,
								"enabled": false
							}
						}
					],
					"metrics": [
						{
							"category": "AllMetrics",
							"enabled": false,
							"retentionPolicy": {
								"days": 0,
								"enabled": false
							}
						}
					]
				}
			}
		],
		"identity": {
			"type": "UserAssigned",
			"userAssignedIdentities": {
				"[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('IdentityName'))]": {}
			}
		},
		"apiVersion": "2017-07-01"
	}],
	"outputs": {}
}
