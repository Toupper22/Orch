{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.38.33.27573",
      "templateHash": "7727104349069766018"
    }
  },
  "parameters": {
    "connectionName": {
      "type": "string",
      "metadata": {
        "description": "Name of the API connection"
      }
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "Azure region for the connection"
      }
    },
    "tags": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Tags to apply to the connection"
      }
    },
    "connectionType": {
      "type": "string",
      "metadata": {
        "description": "Connection type (azuretables, azureblob, office365, etc.)"
      }
    },
    "displayName": {
      "type": "string",
      "metadata": {
        "description": "Display name for the connection"
      }
    },
    "parameterValues": {
      "type": "secureObject",
      "defaultValue": {},
      "metadata": {
        "description": "Connection parameters - varies by connection type"
      }
    },
    "additionalParameterValues": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Connection parameter values that are not sensitive"
      }
    },
    "storageAccountResourceGroup": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "For azuretables connection: Resource group containing the storage account"
      }
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "For azuretables connection: Storage account name"
      }
    }
  },
  "variables": {
    "connectionTypes": {
      "azuretables": {
        "id": "[subscriptionResourceId('Microsoft.Web/locations/managedApis', parameters('location'), 'azuretables')]",
        "displayName": "Azure Table Storage"
      },
      "azureblob": {
        "id": "[subscriptionResourceId('Microsoft.Web/locations/managedApis', parameters('location'), 'azureblob')]",
        "displayName": "Azure Blob Storage"
      },
      "servicebus": {
        "id": "[subscriptionResourceId('Microsoft.Web/locations/managedApis', parameters('location'), 'servicebus')]",
        "displayName": "Service Bus"
      },
      "office365": {
        "id": "[subscriptionResourceId('Microsoft.Web/locations/managedApis', parameters('location'), 'office365')]",
        "displayName": "Office 365 Outlook"
      },
      "sql": {
        "id": "[subscriptionResourceId('Microsoft.Web/locations/managedApis', parameters('location'), 'sql')]",
        "displayName": "SQL Server"
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[parameters('connectionName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "properties": {
        "displayName": "[if(not(empty(parameters('displayName'))), parameters('displayName'), variables('connectionTypes')[parameters('connectionType')].displayName)]",
        "api": {
          "id": "[variables('connectionTypes')[parameters('connectionType')].id]"
        },
        "parameterValues": "[union(parameters('parameterValues'), parameters('additionalParameterValues'), if(and(and(equals(parameters('connectionType'), 'azuretables'), not(empty(parameters('storageAccountResourceGroup')))), not(empty(parameters('storageAccountName')))), createObject('storageaccount', parameters('storageAccountName'), 'sharedkey', listKeys(resourceId(parameters('storageAccountResourceGroup'), 'Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').keys[0].value), createObject()), if(and(and(equals(parameters('connectionType'), 'azureblob'), not(empty(parameters('storageAccountResourceGroup')))), not(empty(parameters('storageAccountName')))), createObject('accountName', parameters('storageAccountName'), 'accessKey', listKeys(resourceId(parameters('storageAccountResourceGroup'), 'Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').keys[0].value), createObject()))]"
      }
    }
  ],
  "outputs": {
    "id": {
      "type": "string",
      "metadata": {
        "description": "API Connection resource ID"
      },
      "value": "[resourceId('Microsoft.Web/connections', parameters('connectionName'))]"
    },
    "name": {
      "type": "string",
      "metadata": {
        "description": "API Connection name"
      },
      "value": "[parameters('connectionName')]"
    },
    "statusLink": {
      "type": "string",
      "metadata": {
        "description": "API Connection status link"
      },
      "value": "[if(greater(length(reference(resourceId('Microsoft.Web/connections', parameters('connectionName')), '2016-06-01').statuses), 0), reference(resourceId('Microsoft.Web/connections', parameters('connectionName')), '2016-06-01').statuses[0].status, 'Unknown')]"
    },
    "connection": {
      "type": "object",
      "metadata": {
        "description": "API Connection object"
      },
      "value": "[reference(resourceId('Microsoft.Web/connections', parameters('connectionName')), '2016-06-01', 'full')]"
    }
  }
}